{"version":3,"file":"StatusLogger.js","sourceRoot":"","sources":["../../Bootstrap/StatusLogger.ts"],"names":[],"mappings":"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","sourcesContent":["import * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\n\r\nexport interface StatusContract {\r\n    AgentInitializedSuccessfully: boolean;\r\n    Reason?: string;\r\n    SDKPresent: boolean;\r\n    AppType: string;\r\n    MachineName: string;\r\n    PID: string;\r\n    SdkVersion: string;\r\n    Ikey: string;\r\n}\r\n\r\nfunction readPackageVersion() {\r\n    let packageJsonPath = path.resolve(__dirname, \"../../package.json\");\r\n    try {\r\n        let packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n        if (packageJson && typeof packageJson.version === \"string\") {\r\n            return packageJson.version;\r\n        }\r\n    } catch (e) {}\r\n    return \"unknown\";\r\n}\r\n\r\n/**\r\n * Zero dependencies: recursive mkdir\r\n */\r\nfunction mkDirByPathSync(HOME_DIR: string, targetDir: string, { isRelativeToScript = false } = {}) {\r\n    const sep = path.sep;\r\n    const initDir = path.isAbsolute(targetDir) ? sep : \"\";\r\n    const baseDir = isRelativeToScript ? __dirname : \".\";\r\n\r\n    return targetDir.split(sep).reduce((parentDir, childDir) => {\r\n        const curDir = path.resolve(baseDir, parentDir, childDir);\r\n        try {\r\n            // Don't try to recreate homedir\r\n            if (HOME_DIR.indexOf(curDir) === -1) {\r\n                fs.mkdirSync(curDir);\r\n            }\r\n        } catch (err) {\r\n            if (err.code === \"EEXIST\") { // curDir already exists!\r\n                return curDir;\r\n            }\r\n\r\n            // To avoid `EISDIR` error on Mac and `EACCES`-->`ENOENT` and `EPERM` on Windows.\r\n            if (err.code === \"ENOENT\") { // Throw the original parentDir error on curDir `ENOENT` failure.\r\n                throw new Error(`EACCES: permission denied, mkdir \"${parentDir}\"`);\r\n            }\r\n\r\n            const caughtErr = [\"EACCES\", \"EPERM\", \"EISDIR\"].indexOf(err.code) > -1;\r\n            if (!caughtErr || caughtErr && curDir === path.resolve(targetDir)) {\r\n                throw err; // Throw if it\"s just the last created dir.\r\n            }\r\n        }\r\n        return curDir;\r\n\r\n    }, initDir);\r\n}\r\n\r\nexport class StatusLogger {\r\n    private _HOME_DIR?: string = os.homedir ? os.homedir() :( process.env[(process.platform == \"win32\") ? \"USERPROFILE\" : \"HOME\"]);\r\n    private _FILE_PATH?: string = `${this._HOME_DIR}/LogFiles/ApplicationInsights/status/`;\r\n    private _FILE_NAME?: string = `status_${os.hostname()}_${process.pid}.json`;\r\n\r\n    private static _APP_TYPE?: string = \"node.js\";\r\n    public static DEFAULT_STATUS?: StatusContract = {\r\n        AgentInitializedSuccessfully: false,\r\n        SDKPresent: false,\r\n        Ikey: null,\r\n        AppType: StatusLogger._APP_TYPE,\r\n        SdkVersion: readPackageVersion(),\r\n        MachineName: os.hostname(),\r\n        PID: String(process.pid)\r\n    }\r\n\r\n    public FULL_PATH = this._FILE_PATH + this._FILE_NAME;\r\n\r\n    public isNodeVersionCompatible() {\r\n      const majVer = process.versions.node.split(\".\")[0];\r\n      return parseInt(majVer) >= 1;\r\n    }\r\n\r\n\r\n    public makeStatusDirs(filepath = this._FILE_PATH) {\r\n        try {\r\n            return mkDirByPathSync(this._HOME_DIR, filepath.replace(/\\\\/g, path.sep).replace(/\\//g, path.sep));\r\n        } catch (e) {\r\n            console.error(\"Error creating Application Insights status folder\", e);\r\n        }\r\n    }\r\n\r\n    public writeFile(data: StatusContract, cb?: Function) {\r\n        fs.open(this.FULL_PATH, \"w\", (err, fid) => {\r\n            if (err) return;\r\n            fs.writeFile(this.FULL_PATH, JSON.stringify(data, null, 2), { encoding: \"utf8\" }, (err) => {\r\n                if (err) {\r\n                    console.error(\"Error writing Application Insights status file\", err);\r\n                }\r\n                if (cb && typeof cb === \"function\") {\r\n                    cb(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public addCloseHandler() {\r\n        process.on(\"exit\", () => { try {\r\n            fs.unlinkSync(this.FULL_PATH);\r\n        } catch (err) { }});\r\n    }\r\n}\r\n"]}